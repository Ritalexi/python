===============================
 How to Use 4-print_square.py
===============================

This library is very simple, since it only has one function called
``print_square(size)``.

Usage
=====

``print_square(...)`` prints a square with the character #. where the argement is the length of the square.

::
    >>> print_square = __import__('4-print_square').print_square
    >>> print_square(4)
    ####
    ####
    ####
    ####

::

    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

The arguement ``size`` if set to zero an empty string is printed.

::

    >>> print_square(0)
    

Invalids
========

The arguement ``size`` must be an integer. Otherwise, a TypeError is raised.

::

    >>> print_square(32.55)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

::

    >>> print_square("aunt")
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

if ``size`` is less than zero, a ValueError is raised.

::

    >>> print_square(-79)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

::

    >>> print_square(-9)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

if ``size`` is a float and is less than zero, a TypeError is raised.

::

    >>> print_square(-9.75)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer
